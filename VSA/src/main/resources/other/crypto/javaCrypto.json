{
  "methods":
  [
    {
      "method": "<javax.security.auth.kerberos.KerberosKey: void <init>(javax.security.auth.kerberos.KerberosPrincipal,byte[],int,int)>",
      "parmIndexs":[0,1,2,3]
    },
    {
      "method": "<javax.security.auth.kerberos.KerberosKey: void <init>(javax.security.auth.kerberos.KerberosPrincipal,char[],java.lang.String)>",
      "parmIndexs":[0,1,2]
    },
    {
      "method": "<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>",
      "parmIndexs":[0,1,2,3]
    },
    {
      "method": "<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>",
      "parmIndexs":[0,1]
    },
    {
      "method": "<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>",
      "parmIndexs":[0]
    },
    {
      "method": "<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>",
      "parmIndexs":[0,1,2]
    },
    {
      "method": "<javax.crypto.spec.DESedeKeySpec: void <init>(byte[])>",
      "parmIndexs":[0]
    },
    {
      "method": "<javax.crypto.spec.DESedeKeySpec: void <init>(byte[],int)>",
      "parmIndexs":[0,1]
    },
    {
      "method": "<javax.crypto.spec.DESKeySpec: void <init>(byte[])>",
      "parmIndexs":[0]
    },
    {
      "method": "<javax.crypto.spec.DESKeySpec: void <init>(byte[],int)>",
      "parmIndexs":[0,1]
    },
    {
      "method": "<javax.crypto.spec.DHPrivateKeySpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>",
      "parmIndexs":[0,1,2]
    },
    {
      "method": "<javax.crypto.spec.DSAPrivateKeySpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>",
      "parmIndexs":[0,1,2,3]
    },
    {
      "method": "<javax.crypto.spec.ECPrivateKeySpec: void <init>(java.math.BigInteger,java.security.spec.ECParameterSpec)>",
      "parmIndexs":[0,1]
    },
    {
      "method": "<javax.crypto.spec.PBEKeySpec: void <init>(char[])>",
      "parmIndexs":[0]
    },
    {
      "method": "<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int)>",
      "parmIndexs":[0,1,2]
    },
    {
      "method": "<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>",
      "parmIndexs":[0,1,2,3]
    },
    {
      "method": "<javax.crypto.spec.PKCS8EncodedKeySpec: void <init>(byte[])>",
      "parmIndexs":[0]
    },
    {
      "method": "<javax.crypto.spec.RSAPrivateKeySpec: void <init>(java.math.BigInteger,java.math.BigInteger)>",
      "parmIndexs":[0,1]
    },
    {
      "method": "<javax.crypto.spec.X509EncodedKeySpec: void <init>(byte[])>",
      "parmIndexs":[0]
    },
    {
      "method": "<javax.crypto.spec.RSAMultiPrimePrivateCrtKeySpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.security.spec.RSAOtherPrimeInfo[])>",
      "parmIndexs":[0,1,2,3,4,5,6,7,8]
    },
    {
      "method": "<javax.crypto.spec.RSAPrivateCrtKeySpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>",
      "parmIndexs":[0,1,2,3,4,5,6,7]
    },
    {
      "method": "<javax.crypto.spec.EncodedKeySpec: void <init>(byte[])>",
      "parmIndexs":[0]
    }
  ]
}
